!!ExportedWorkflow
apiVersion: torq.io/v2alpha
kind: Workflow
id: 795bcc93-7f52-4c2f-ab3d-93315a2cf81d
name: Create Tables on Snowflake for Torq Audit and Activity Logs
trigger:
  onDemandTrigger:
    parameterList:
      parameters: []
playbook:
  steps:
    - name: us-docker.pkg.dev/stackpulse/public/utils/parameters_utils/workflow_parameters:1.3.0
      id: workflow_parameters
      env:
        SCHEMA: |-
          {
              "snowflake_integration": {
                  "type": 8,
                  "prettyName": "snowflake_integration",
                  "description": "The name of the integration with Snowflake",
                  "uiPlaceholder": "snowflake"
              },
              "snowflake_database": {
                  "type": 8,
                  "prettyName": "snowflake_database",
                  "description": "The name of the database on Snowflake.",
                  "uiPlaceholder": "snowflake_database"
              },
              "snowflake_audit_table": {
                  "type": 8,
                  "prettyName": "snowflake_audit_table",
                  "description": "",
                  "uiPlaceholder": "torq_audit_logs"
              },
              "snowflake_warehouse": {
                  "type": 8,
                  "prettyName": "snowflake_warehouse",
                  "description": "The name of the Snowflake warehouse",
                  "uiPlaceholder": "snowflake_warehouse"
              },
              "snowflake_activity_table": {
                  "type": 8,
                  "prettyName": "snowflake_activity_table",
                  "description": "",
                  "uiPlaceholder": "torq_activity_logs"
              },
              "snowflake_schema": {
                  "type": 8,
                  "prettyName": "snowflake_schema",
                  "description": "The name of tables schema",
                  "uiPlaceholder": "PUBLIC"
              }
          }
        VALUES: |-
          {
            "snowflake_integration": "",
            "snowflake_database": "",
            "snowflake_audit_table": "torq_audit_logs",
            "snowflake_warehouse": "",
            "snowflake_activity_table": "torq_activity_logs",
            "snowflake_schema": ""
          }
      uuid: 5b65bd5e-659f-48f9-8196-981da0e0ba70
      pretty_name: Workflow Parameters
      options:
        executor:
          name: utils_workflow_parameters_v_1_3_0
          env: {}
          sync: true
          disable: false
      manifestId: 30ebccc8-0ce8-5f13-960d-bc03b0179f53
      isPrivate: false
      mock_output:
        enabled: false
      skip: false
    - name: us-docker.pkg.dev/stackpulse/public/snowflake/generate-jwt-token:1.0.6
      id: generate_jwt_token
      env:
        SNOWFLAKE_PRIVATE_KEY: ""
      envFrom:
        integrationRef: '{{ $.workflow_parameters.snowflake_integration }}'
      uuid: 7e6847b2-20fd-4109-b544-c6d89d2d30e3
      pretty_name: Generate JWT token
      options: {}
      manifestId: 4ac5a417-b6bd-50bf-be67-bce4913e0acf
      isPrivate: false
      mock_output:
        enabled: false
      skip: false
      retry: {}
    - name: us-docker.pkg.dev/stackpulse/public/snowflake/post-synchronous-statement:4.0.0
      id: create_audit_logs_table
      env:
        DATABASE: '{{ $.workflow_parameters.snowflake_database }}'
        SCHEMA: '{{ $.workflow_parameters.snowflake_schema }}'
        SNOWFLAKE_JWT_TOKEN: '{{ $.generate_jwt_token.jwt }}'
        STATEMENT: create table {{ $.workflow_parameters.snowflake_audit_table }}(jsonRecord variant);
        WAREHOUSE: '{{ $.workflow_parameters.snowflake_warehouse }}'
      envFrom:
        integrationRef: '{{ $.workflow_parameters.snowflake_integration }}'
      uuid: 09594287-afe3-479b-946e-c4d82c5a44b2
      pretty_name: Create Audit Logs Table
      options:
        executor:
          name: http_request_v_4_10_1
          env:
            AUTHORIZATION: Bearer
            BODY: |-
              {
              {{ if .BINDINGS }}  "bindings": {{ .BINDINGS }},{{ end }}
                "database": "{{ .DATABASE | jsonEscape }}",
                "resultSetMetaData": {
                  "format": "json"
                },
              {{ if .ROLE }}  "role": "{{ .ROLE | jsonEscape }}",{{ end }}
                "schema": "{{ .SCHEMA | jsonEscape }}",
                "statement": "{{ .STATEMENT | jsonEscape }}",
              {{ if .STATEMENT_TIMEOUT }}  "timeout": {{ .STATEMENT_TIMEOUT }},{{ end }}
              {{ if .WAREHOUSE }}  "warehouse": "{{ .WAREHOUSE | jsonEscape }}"{{ end }}
              }
            CONTENT_TYPE: application/json; charset=utf-8
            HEADERS: |-
              {
                "Accept": "application/json",
                "User-Agent": "TorqHTTPStep/1.0.0",
                "X-Snowflake-Authorization-Token-Type": "KEYPAIR_JWT"
              }
            METHOD: POST
            PARSE_HJSON: "true"
            REQUIRED_VARIABLES: '["SNOWFLAKE_JWT_TOKEN","DATABASE","SCHEMA","SNOWFLAKE_ACCOUNT_IDENTIFIER","STATEMENT"]'
            TIMEOUT: "30"
            TOKEN: '{{ .SNOWFLAKE_JWT_TOKEN }}'
            URL: https://{{ .SNOWFLAKE_ACCOUNT_IDENTIFIER }}.snowflakecomputing.com/api/v2/statements?{{ if .IS_NULLABLE }}&nullable={{ .IS_NULLABLE | urlEnc }}{{ end }}{{ if .PAGE_SIZE }}&pageSize={{ .PAGE_SIZE | urlEnc }}{{ end }}{{ if .REQUEST_ID }}&requestId={{ .REQUEST_ID | urlEnc }}{{ end }}
          sync: true
          disable: false
      documentationUrl: https://docs.snowflake.com/en/developer-guide/sql-api/reference.html#post-api-v2-statements
      manifestId: 2fdb0de7-f309-5c53-a031-1606fc70046d
      isPrivate: false
      skip: false
    - name: us-docker.pkg.dev/stackpulse/public/snowflake/post-synchronous-statement:4.0.0
      id: create_activity_logs_table
      env:
        DATABASE: '{{ $.workflow_parameters.snowflake_database }}'
        SCHEMA: '{{ $.workflow_parameters.snowflake_schema }}'
        SNOWFLAKE_JWT_TOKEN: '{{ $.generate_jwt_token.jwt }}'
        STATEMENT: create table {{ $.workflow_parameters.snowflake_activity_table }}(jsonRecord variant);
        WAREHOUSE: '{{ $.workflow_parameters.snowflake_warehouse }}'
      envFrom:
        integrationRef: '{{ $.workflow_parameters.snowflake_integration }}'
      uuid: a3b1cd69-0a48-44cb-9e5c-65379e95b185
      pretty_name: Create Activity Logs Table
      options:
        executor:
          name: http_request_v_4_10_1
          env:
            AUTHORIZATION: Bearer
            BODY: |-
              {
              {{ if .BINDINGS }}  "bindings": {{ .BINDINGS }},{{ end }}
                "database": "{{ .DATABASE | jsonEscape }}",
                "resultSetMetaData": {
                  "format": "json"
                },
              {{ if .ROLE }}  "role": "{{ .ROLE | jsonEscape }}",{{ end }}
                "schema": "{{ .SCHEMA | jsonEscape }}",
                "statement": "{{ .STATEMENT | jsonEscape }}",
              {{ if .STATEMENT_TIMEOUT }}  "timeout": {{ .STATEMENT_TIMEOUT }},{{ end }}
              {{ if .WAREHOUSE }}  "warehouse": "{{ .WAREHOUSE | jsonEscape }}"{{ end }}
              }
            CONTENT_TYPE: application/json; charset=utf-8
            HEADERS: |-
              {
                "Accept": "application/json",
                "User-Agent": "TorqHTTPStep/1.0.0",
                "X-Snowflake-Authorization-Token-Type": "KEYPAIR_JWT"
              }
            METHOD: POST
            PARSE_HJSON: "true"
            REQUIRED_VARIABLES: '["SNOWFLAKE_JWT_TOKEN","DATABASE","SCHEMA","SNOWFLAKE_ACCOUNT_IDENTIFIER","STATEMENT"]'
            TIMEOUT: "30"
            TOKEN: '{{ .SNOWFLAKE_JWT_TOKEN }}'
            URL: https://{{ .SNOWFLAKE_ACCOUNT_IDENTIFIER }}.snowflakecomputing.com/api/v2/statements?{{ if .IS_NULLABLE }}&nullable={{ .IS_NULLABLE | urlEnc }}{{ end }}{{ if .PAGE_SIZE }}&pageSize={{ .PAGE_SIZE | urlEnc }}{{ end }}{{ if .REQUEST_ID }}&requestId={{ .REQUEST_ID | urlEnc }}{{ end }}
          sync: true
          disable: false
      documentationUrl: https://docs.snowflake.com/en/developer-guide/sql-api/reference.html#post-api-v2-statements
      manifestId: 2fdb0de7-f309-5c53-a031-1606fc70046d
      isPrivate: false
      skip: false
    - exit:
        success: "true"
        pretty_name: Exit
        uuid: d22f072e-523e-4165-a4d2-9a9894748e78
  annotations:
    - uuid: 3568d137-41b2-4c65-8868-a8a8d5243f0b
      x: -594
      "y": 115
      width: 525
      height: 453
      content: '{"type":"doc","content":[{"type":"heading","attrs":{"level":2},"content":[{"type":"text","text":"Create Tables in Snowflake for Torq Audit and Activity Logs "}]},{"type":"heading","attrs":{"level":2}},{"type":"paragraph","content":[{"type":"text","text":"Use this workflow to create tables in Snowflake to store Audit and Activity Logs."}]},{"type":"paragraph"},{"type":"paragraph","content":[{"type":"text","text":"Snowflake uses Private Key Authentication to Integrate with Torq:"}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"link","attrs":{"href":"https://docs.snowflake.com/en/user-guide/key-pair-auth","target":"_blank","rel":"noopener noreferrer nofollow","class":null}}],"text":"https://docs.snowflake.com/en/user-guide/key-pair-auth"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"type":"text","text":"                                  "},{"type":"image","attrs":{"src":"https://cdn.torq.io/vendors/snowflake.svg","alt":null,"title":null,"width":201,"height":201,"isDraggable":true,"isResizable":null}}]},{"type":"paragraph","content":[{"type":"text","text":"                                           "}]}]}'
    - uuid: 5742d1d8-3b8b-4a32-939e-d708dcde5e49
      x: 346
      "y": 365
      width: 429
      height: 93
      content: '{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"To create JWT, Private Key should be added as a secret."}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"},{"type":"underline"}],"text":"Private Key must be a PEM encoded PKCS1 or PKCS8 key"}]}]}'
root: true
